#include "uart_interface.h"
#include "xil_printf.h"
#include "xuartlite.h"

XUartLite usb_uart;

int initialize_uart() {
    int Status;

    Status = XUartLite_Initialize(&usb_uart, STDOUT_BASEADDRESS);
    if (Status != XST_SUCCESS) return XST_FAILURE;

    XUartLite_SetRecvHandler(&usb_uart, (XUartLite_Handler)uart_handler, &usb_uart);
    XUartLite_EnableInterrupt(&usb_uart);

    return XST_SUCCESS;
}

int connect_uart_interrupt(XIntc *InterruptController)
{
    int Status;

	// Connect the UART interrupt handler
    Status = XIntc_Connect(InterruptController, UART_INT_ID, (XInterruptHandler)XUartLite_InterruptHandler, &usb_uart);
    if (Status != XST_SUCCESS) return XST_FAILURE;

    return XST_SUCCESS;
}

void enable_uart_interrupt(XIntc *InterruptController)
{
    // Enable the UART interrupt
    XIntc_Enable(InterruptController, UART_INT_ID);
}

void uart_handler(void *CallBackRef, unsigned int ByteCount)
{
    outbyte("+")
    // if (ByteCount > 0) {
    //     xil_printf("%i", ByteCount);
    // }
    // for (int i = 0; i < ByteCount; i++) {
    //     char c = inbyte();
    //     xil_printf("'%c' 0x%02X\r\n", c, c);
    // }
}
